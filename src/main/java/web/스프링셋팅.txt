인텔리제이
1. 새 프로젝트
	이름 : springProject(임의)
	위치 : Desktop
	깃 저장소 생성 (체크 안함)
	시스템 빌드 : gradle
	JDK 17
	Gradle DSL : GROOVY 
	샘플코드 고급설정 : 없음
	[생성] 
2. 스프링 기본 세팅 
	0라이브러리세팅
	https://start.spring.io/
	버전체크
	[dependencies]원하는 라이브러리 선택 SpringWEB
	[Expole]
	build.grade 파일의 코드 복사
	1. src > main > java > 패키지구성> 클래스생성(AppStart) (최상위 클래스)
	1. 클래스 위에
	2. @어노테이션 (SpringBootApplication) 주입
	3. main함수
	SpringApplication.run(현재클래스명.class);
	
	2. 프로젝트폴더 > build.gradle > 웹에서 복사한 코드 붙여넣기 
	> 그레이들 변경 내용 로드

=======================================
JDK : 자바 개발도구 v.17 (컴파일러 포함 jar [각종 미리 만든 클래스] 포함)
라이브러리 : (도구)클래스, 인터페이스 들을 모아둔 압축파일
프레임워크 : (틀) 프로그램 개발하기 위해 틀을 제공하는 프로그램
	프레임워크[라이브러리[클래스[코드] ] ]

SPRING : 자바를 이용한 라이브러리 들의 집합들로 만든 프레임워크/프로그램

SPRING BOOT : SPRING 세팅 간소화/자동화
	- SPRING WEB	-SPRING BATCH 등등 세팅을 손쉽게 제공
프로젝트 : 
1. HTML / CSS /JS : VSCODE 프로젝트

2. JAVA(CONSOLE) : 프로젝트

3. SPRING [JAVA(GRADLE)]프로젝트 
- INTELLIJ IDEA COMMUNITY EDITION 무료버전에서 SPRING 프로젝트 지원 안함.
- GRADLE 프로젝트 만들어서 직접 SPRING 세팅 [https://start.spring.io/]

GRADLE ? : 그루비를 이용한 빌드 자동화 시스템이다
외부 라이브러리/프레임워크 설치 해주고 관리 해주는 프로그램

그루비 : JAVA 기반으로 만들어진 객체지향 언어 (수업X)

자동화 아니면?
-jar 다운 > jar파일 프로젝트내 저장 > jar파일 오른쪽 클릭 프로젝트에 등록
	-외부 라이브러리 많아지면 관리가 힘들다.

-외부 라이브러리들을 아래와 그레이들 형식의 코드를 통해 자동 다운로드 /빌드/세팅
implementation 'org.springframework.boot:spring-boot-starter-web'

-스프링 web 프레임워크
왜?? 미리 규칙/규약/세팅/법 , MVC 패턴 미리 다 세팅,
전자정부 프레임워크(SPRING) : 한사람이 평생 못해 > 담당자 변경 > 이어서 개발이 되도록

- 프로젝트 폴더 규칙
* src 	: 코드 소스 파일
- main	:
-- java	:
--- 패키지 : 최상위 패키지명 [웹/앱 페이지의 URL 거꾸로](ex : naver.com > com.naver) 
---- 클래스 : 스프링 부트를 실행하기 위해 main함수를 갖는 클래스

=========================================================
APACHe TOMCAT 아키텍처 : APACHE + TOMCAT
	-HTML , 서블릿(클래스) 들을 클라이언트로 부터 요청/응답의 서비스를 구축하는 프로그램

	- Apache 서버 : HTTP를 지원하는 서버(구축) 프로그램
		-HTTP규약에 따른 통신 가능

	- TOMCAT 서버 : JAVA기반으로 만들어진 서버(구축) 프로그램
		-JSP , SERVLET(클래스)* 규약에 따른 통신 가능

-HTTP : HYPER TEXT TRANSFORM PROTOCOL
문서 를 교환할때 사용되는 규약(인터넷)
문서(HTML,XML,TEXT등 ), JAVA(X)
SERVER : 서비스를 제공하는 컴퓨터
Client : 서비스를 요청하는 컴퓨터

resource > 파일생성(경로) > html생성(index)